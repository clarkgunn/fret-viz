---
// export interface Props {
// 	title: string;
// 	body: string;
// 	href: string;
// }

// const { href, title, body } = Astro.props;
---

<figure id="fretboard"></figure>

<style>
  .dot-text {
    letter-spacing: -3px;
  }
</style>

<script>
	import { Fretboard } from '@moonwave99/fretboard.js';
  import {getIntervalicFunction} from '../utils';

const colors = {
    "defaultFill": "white",
    "defaultActiveFill": "#ff636c",
    "defaultStroke": "black",
    "defaultActiveStroke": "#ff636c",
    "disabled": "#aaa",
    "primaryFill": "#3273dc",
    "intervals": {
      "1P": "#F25116",
      "2M": "#FCFF6C",
      "2m": "#FCFF6C",
      "3m": "#F29727",
      "3M": "#F29727",
      "4P": "#2FABEE",
      "4A": "#2FABEE",
      "5P": "#D89D6A",
      "5A": "#D89D6A",
      "6M": "#D7FFAB",
      "6m": "#D7FFAB",
      "7M": "#96ADC8",
      "7m": "#96ADC8"
    },
    "octaves": [
      "#70D6FF",
      "#FFBE0B",
      "#E9FF70",
      "#FF70A6",
      "#6ae674"
    ],
    "chordTypes": {
      "maj7": "#00bbf9",
      "7": "#F25116",
      "m7": "#F29727",
      "m7b5": "#8338ec"
    },
    "modes": {
      "ionian": "#e76f51",
      "dorian": "#6a994e",
      "phrygian": "#8338ec",
      "lydian": "#ffbd00",
      "mixolydian": "#e36414",
      "aeolian": "#00bbf9",
      "locrian": "#1D5DF2"
    }
  }

	let fretboard = new Fretboard({dotText: ({note}) => note});
	let key;
	let scale;
	let indicator = 'note';
  let dots = []
	let style = {
		text: (dot) => {
      if (indicator === 'intervalic-function') {
        return getIntervalicFunction(dot.interval);
      }

      return dot[indicator];
    },
		fill: (dot, index) =>
			dot.degree === 1 ? colors.defaultActiveFill : 'white',
	}

	// shows where all the A,B,C#,D,E,F#,G# are across all strings,
	// highlighting the C box of the CAGED system (between frets 9 and 12, that is)
	fretboard.renderScale({
		type: 'major',
		root: 'C',
	}).style(style);

	window.addEventListener('setKey', (event) => {
		key = event.detail;

		fretboard.renderScale({
			type: scale,
			root: key
		}).style(style);
	});

	window.addEventListener('setScale', (event) => {
		scale = event.detail;

		fretboard.renderScale({
			type: scale,
			root: key
		}).style(style);
	});

	window.addEventListener('setIndicator', (event) => {
		indicator = event.detail;
		fretboard.style(style);
	});

  window.addEventListener('setNote', (event) => {
    console.log(event);
    const dot = {
      string: 1,
      fret: 1,
      note: event.detail,
    }
    fretboard.setDots([dot]).render();
  })
</script>
