---
import Layout from '../layouts/Layout.astro';
import Fretboard from '../components/Fretboard.astro';
import Settings from '../components/Settings.astro';
---

<Layout title="FretViz">
  <main>
    <Fretboard />
    <Settings />
  </main>
</Layout>

<script>
  import { PitchDetector } from 'pitchy';
  import { Note } from 'tonal';

  function setNote(note) {
    window.dispatchEvent(
      new CustomEvent(`setNote`, {
        detail: note,
      })
    );
  }

  function updatePitch(analyserNode, detector, input, sampleRate) {
    analyserNode.getFloatTimeDomainData(input);
    const [pitch, clarity] = detector.findPitch(input, sampleRate);

    if (clarity > 0.8 && pitch > 80) {
      const pitchNode = document.getElementById('pitch');
      const clarityNode = document.getElementById('clarity');
      const noteNode = document.getElementById('note');

      pitchNode.textContent = `${Math.round(pitch)} Hz`;
      clarityNode.textContent = `${Math.round(clarity * 100)} %`;

      const note = Note.fromFreq(Math.round(pitch));
      noteNode.textContent = note;
      setNote(note);
    } else {
      setNote(null);
    }

    window.setTimeout(
      () => updatePitch(analyserNode, detector, input, sampleRate),
      75
    );
  }

  document.addEventListener('DOMContentLoaded', () => {
    const audioContext = new window.AudioContext();
    const analyserNode = audioContext.createAnalyser();

    document
      .getElementById('resume-button')
      .addEventListener('click', () => audioContext.resume());

    navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {
      audioContext.createMediaStreamSource(stream).connect(analyserNode);
      const detector = PitchDetector.forFloat32Array(analyserNode.fftSize);
      const input = new Float32Array(detector.inputLength);
      updatePitch(analyserNode, detector, input, audioContext.sampleRate);
    });
  });
</script>
